pipeline{
    agent{
        label "slave"
    }

    stages{
        
        stage("Configuring Ansible"){
            steps{
                script{
                    echo "CI pipeline was Successfull now we are running CD pipeline via webhooks"
                    // Install Ansible on the slave node
                    sh "yum install ansible -y || echo 'successfully installed Ansible' "
                }
            }
        }

        stage("Terraform Setup"){
            steps{
                script{
                    if(!fileExists('terraform_1.6.0_linux_amd64.zip')){
                        sh 'wget https://releases.hashicorp.com/terraform/1.6.0/terraform_1.6.0_linux_amd64.zip'
                        sh 'unzip terraform_1.6.0_linux_amd64.zip'
                        sh 'mv terraform /usr/local/bin/'
                    }else{
                        echo 'Terrform zip file is already Exists.'
                    }
                }
            }
        }

        stage("Creating Infrastructure for PROD Envirnoment"){
            steps{
                script{
                    sh "terraform -chdir=./deploy/terraformscripts init"
                    withCredentials([sshUserPrivateKey(credentialsId: 'key-path', keyFileVariable: 'SSH_KEY_PATH')]){
                        sh "terraform -chdir= ./deploy/terraformscripts apply -var 'key-path=${SSH_KEY_PATH}' --auto-approve"
                    }
                    sh "sleep 30"
                    sh "cp ./deploy/terraformscripts/inventory ./deploy/playbooks/inventory"
                    echo "Succesfully created Infra"
                }
            }
        }

        stage("Configure K8s cluster via Ansible on Infrastructure"){
            environment{
                ANSIBLE = '../../deploy/playbooks'
            }
            steps{
                dir("${ANSIBLE}"){
                    sh "ansible-playbook k8s_master.yaml"
                    sh "ansible-playbook k8s_common.yaml"
                    echo "Successfully Configured K8s Cluster"
                }
            }
        }

        stage("Deploying Application into prod"){
            environment{
                ANSIBLE = '../../deploy/playbooks'
            }
            steps{
                if("${ANSIBLE}"){
                    sh "ansible-playbook deployment_playbook.yaml"
                    echo "Successfully Deployed "
                }
            }
        }
    }
}